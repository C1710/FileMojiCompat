// From https://proandroiddev.com/android-libraries-on-github-packages-21f135188d58 with modifications
apply plugin: 'maven-publish'

def LIB_GROUP_ID = "de.c1710"
def LIB_ARTIFACT_ID = "filemojicompat"
def LIB_VERSION = "1.0.18"


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
    afterEvaluate {
        archiveVersion.set(android.defaultConfig.versionName)
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    afterEvaluate {
        // Wait after evaluation to add the android classpath
        // to avoid "buildToolsVersion is not specified" error
        classpath += files(android.getBootClasspath())
        options.linkSource true
        options.links("http://d.android.com/reference/");
    }
    failOnError(false)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    afterEvaluate {
        archiveVersion.set(android.defaultConfig.versionName)
    }
    from javadoc.destinationDir
    dependsOn(javadoc)
}

// This part is from https://stackoverflow.com/a/43279079
Properties localproperties = new Properties()
localproperties.load(project.rootProject.file("local.properties").newDataInputStream())

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GithubPackages"
                url = uri("https://maven.pkg.github.com/c1710/filemojicompat")
                credentials {
                    username = System.getenv('GITHUB_USER') ?: project.properties['GITHUB_USER'] ?: localproperties.getProperty("GITHUB_USER")
                    password = System.getenv('GITHUB_PERSONAL_ACCESS_TOKEN') ?: project.properties['GITHUB_PERSONAL_ACCESS_TOKEN'] ?: localproperties.getProperty("GITHUB_PERSONAL_ACCESS_TOKEN")
                }
            }
        }

        publications {
            filemojicompat(MavenPublication) {
                groupId LIB_GROUP_ID
                artifactId LIB_ARTIFACT_ID
                version = android.defaultConfig.versionName
                pom {
                    name = "FilemojiCompat"
                    description = "A library based on EmojiCompat that enables the usage of files as the source of an emoji font."
                    url = "https://github.com/c1710/filemojicompat"
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            name = "Constantin A."
                            email = "blobmoji@c1710.de"
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com/c1710/filemojicompat.git"
                        developerConnection = "scm:git:ssh://github.com:c1710/filemojicompat.git"
                        url = "https://github.com/c1710/filemojicompat/tree/master"
                    }
                }
                artifact("$buildDir/outputs/aar/filemojicompat-release.aar")
                artifact(sourceJar)
                artifact(javadocJar)

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.api.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}